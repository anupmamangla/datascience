install.packages("gridExtra")
install.packages("data.table")
install.packages("caTools")
library(tidyverse)
library(dplyr)
library(caTools)
library(gridExtra)
library(data.table)
#heartData <- read.csv("~/Desktop/Project/heart.csv")
heartData <- read.csv("heart.csv")
input <- copy(heartData)
dim(input)
str(input)
head(input)
input$sex <- ifelse((input$sex == 1), 'male','female')
input$target <- ifelse((input$target == 1), 'HeartDisease','No Heart Disease')
head(input)
table(input$target)
ggplot(input,aes(target, fill=target)) + geom_bar(stat="count") +
ggtitle("Healthy Vs Heart Disease", subtitle="From Heart Disease UCI dataset ") + xlab("Target") + ylab("Number of People")
install.packages("gridExtra")
install.packages("data.table")
install.packages("caTools")
library(tidyverse)
library(dplyr)
library(caTools)
library(gridExtra)
library(data.table)
#heartData <- read.csv("~/Desktop/Project/heart.csv")
heartData <- read.csv("heart.csv")
input <- copy(heartData)
dim(input)
str(input)
head(input)
input$sex <- ifelse((input$sex == 1), 'male','female')
input$target <- ifelse((input$target == 1), 'HeartDisease','No Heart Disease')
head(input)
table(input$target)
ggplot(input,aes(target, fill=target)) + geom_bar(stat="count") +
ggtitle("Healthy Vs Heart Disease", subtitle="From Heart Disease UCI dataset ") + xlab("Target") + ylab("Number of People")
table(input$target, input$sex)
ggplot(input,aes(target, fill=target)) + geom_bar(stat="count") + ggtitle("Role of gender in Heart Disease") + xlab("Target") + ylab("Number of People") + facet_wrap(~sex, ncol=2,scale="fixed")
# analazing heart disease over age distribution
p1 <- ggplot(data = input) + geom_bar(mapping = aes(x = age ,fill = target), position = "dodge") + labs(title = "Role of Age in heart disease") + xlab("Age distribution") + ylab("Number of people") + theme(legend.position = "top", legend.margin=margin(t = 0, unit='cm'), legend.key.size = unit(0.25, "cm"))
p1
## analazing heart disease over cholestoral
p2 <- ggplot(data = input) + geom_histogram(mapping = aes(x =  chol, fill = target), position = "dodge", bins = 15) + labs(title = "Role of Cholestrol in heart disease") + xlab("Cholestrol") + ylab("Number of people") + theme(legend.position = c(0.98, 0.98), legend.justification = c("right", "top"), legend.margin=margin(t = 0, unit='cm'), legend.key.size = unit(0.25, "cm"))
p2
# Role of resting BP
p3 <- ggplot(data = input) + geom_histogram(mapping = aes(x =  trestbps, fill = target), position = "dodge", bins = 15) + labs(title = "Role of resting BP in heart disease") + xlab("Resting Blood Pressure") + ylab("Number of people") + theme( legend.position = c(0.98, 0.98), legend.justification = c("right", "top"), legend.margin=margin(t = 0, unit='cm'), legend.key.size = unit(0.25, "cm"))
p3
# Role of fasting blood sugar
# fasting blood sugar > 120 mg/dl = 1, < 120 mg/dl = 0
p4 <- ggplot(data = input) + geom_histogram(mapping = aes(x =  fbs, fill = target), position = "dodge", bins =3) + labs(title = "Role of fasting blood sugar in heart disease", subtitle="Fasting blood sugar > 120 mg/dl (1= true)") + xlab("Fasting Blood Sugar") + ylab("Number of people") + theme( legend.position = c(0.98, 0.98), legend.justification = c("right", "top"), legend.margin=margin(t = 0, unit='cm'), legend.key.size = unit(0.25, "cm"))
p4
grid.arrange(p1,p2,p3,p4, nrow = 2, ncol = 2)
ggplot(input,aes(thalach, fill=target)) +
geom_histogram(aes(y=..density..),breaks=seq(70, 205, by=10), color="grey17") +
geom_density(alpha=.1, fill="black") +
facet_wrap(~target, ncol=1,scale="fixed") +
ggtitle("Max Heart Rate (thalach) Histogram") + xlab("Maximum Heart Rate Achieved") + ylab("Density / Count") + theme(legend.position ="top", legend.margin=margin(t = 0, unit='cm'), legend.key.size = unit(0.25, "cm"))
## analazing heart disease over blood disorder Thalassemia (thal)
ggplot(data = input) + geom_bar(mapping = aes(x = thal ,fill = target), position = "dodge") + labs(title = "Role of blood disorder Thalassemia (thal) in presense of heart disease") + theme( legend.position = c(0.02, 0.98), legend.justification = c("left", "top"), legend.margin=margin(t = 0, unit='cm'), legend.key.size = unit(0.25, "cm"))
ggplot(data = input) + geom_bar(mapping = aes(x = cp ,fill = target), position = "dodge") + labs(title = "Role of chest pain in heart disease") + xlab("Type of chest pain") + ylab("Number of people") + theme( legend.position = c(0.98, 0.98), legend.justification = c("right", "top"), legend.margin=margin(t = 0, unit='cm'), legend.key.size = unit(0.25, "cm"))
# analyzing heart disease over number of major blood vessels
ggplot(data = input) + geom_bar(mapping = aes(x =  ca, fill = target) , position = "dodge") +  labs(title = "Role of Major Blood Vessels (ca) in Heart disease") + xlab("Number of blood vessels in a person") + ylab("Number of people")  + theme( legend.position = c(0.98, 0.98), legend.justification = c("right", "top"), legend.margin=margin(t = 0, unit='cm'), legend.key.size = unit(0.25, "cm"))
# slope
ggplot(data = input) + geom_bar(mapping = aes(x = slope ,fill = target), position = "dodge") + labs(title = "The ST segment/heart rate slope as a predictor of CAD") + xlab("Slope") + ylab("Number of people") + theme( legend.position = c(0.99, 0.99), legend.justification = c("right", "top"), legend.margin=margin(t = 0, unit='cm'), legend.key.size = unit(0.25, "cm"))
# Chest pain type
p1 <- ggplot(data = input) + geom_bar(mapping = aes(x = cp ,fill = target), position = "dodge") + labs(title = "Role of chest pain in heart disease") + xlab("Type of chest pain") + ylab("Number of people") + theme( legend.position = "top", legend.margin=margin(t = 0, unit='cm'), legend.key.size = unit(0.25, "cm"))
# thallasemia
p2 <- ggplot(data = input) + geom_bar(mapping = aes(x = thal ,fill = target), position = "dodge") + labs(title = "Role of blood disorder thalassemia") + xlab("Thalassemia") + ylab("Number of people") + theme( legend.position ="top", legend.margin=margin(t = 0, unit='cm'), legend.key.size = unit(0.25, "cm"))
# Major blood vessels
p3 <- ggplot(data = input) + geom_bar(mapping = aes(x =  ca, fill = target) , position = "dodge") +  labs(title = "Role of Major Blood Vessels") + xlab("Number of blood vessels in a person") + ylab("Number of people")  + theme( legend.position = c(0.98, 0.98), legend.justification = c("right", "top"), legend.margin=margin(t = 0, unit='cm'), legend.key.size = unit(0.25, "cm"))
# slope
p4 <- ggplot(data = input) + geom_bar(mapping = aes(x = slope ,fill = target), position = "dodge") + labs(title = "The ST segment/heart rate slope as a predictor of CAD") + xlab("Slope") + ylab("Number of people") + theme( legend.position = "top", legend.margin=margin(t = 0, unit='cm'), legend.key.size = unit(0.25, "cm"))
grid.arrange(p1,p2,p3,p4, nrow = 2, ncol = 2)
g<-ggplot(input)
g + geom_bar(stat="identity",aes(x=age,y=chol,fill=as.factor(sex)))+xlab("Age")+ylab("cholestrol")+labs(fill="Color Coding")
heartData
split <- sample.split(heartData, SplitRatio = 0.8)
trainingSet <- subset(heartData, split == "TRUE")
testingSet <- subset(heartData, split == "FALSE")
nrow(trainingSet)
nrow(testingSet)
nrow(heartData)
heartData$sex <- as.factor(heartData$sex)
heartData$cp <- factor(heartData$cp)
heartData$restecg <- factor(heartData$restecg)
heartData$fbs <- factor(heartData$fbs)
heartData$exang <- factor(heartData$exang)
heartData$ca <- factor(heartData$ca)
heartData$thal <- factor(heartData$thal)
heartData$target <- factor(heartData$target)
str(heartData)  ## structure of heartData
## All the attributes are taken into consideration for analysis
logisticModel <- glm(target ~ age + sex + cp + trestbps + chol + fbs + restecg + thalach + exang + oldpeak + slope + ca + thal, data = trainingSet, family = 'binomial')
summary(logisticModel)
## use step function to eliminate the insignificant variables
newModel <- step(logisticModel, direction = "backward")
summary(newModel)
summary(table(heartData$age, heartData$sex, heartData$target, heartData$trestbps, heartData$cp, heartData$restecg))
plot(newModel)
result <- predict(newModel, newdata = testingSet, type='response')
result <- ifelse(result > 0.5, 1, 0)
linearPredCorrect <- data.frame(actual=testingSet$target, predicted=result, match = (testingSet$target == result))
linearPredCorrect
table(linearPredCorrect$match)
accuracy = length(linearPredCorrect$match[linearPredCorrect$match==TRUE])/count(testingSet) * 100
print(paste("Logistic regression has ", round(accuracy, 2), "% accuracy"))
